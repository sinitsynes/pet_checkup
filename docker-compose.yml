services:
  db:
    image: postgres:14-alpine
    container_name: db
    hostname: ${POSTGRES_HOST}
    env_file: .env
    # environment:
    #   PGDATA: /var/lib/postgresql/data/pet_checkup/
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -d $$POSTGRES_DB -U $$POSTGRES_USER
      interval: 10s
      timeout: 5s
      retries: 5

  migrate:
    image: migrate/migrate
    depends_on:
      db:
        condition: service_healthy
    env_file: .env
    volumes:
      - ./sql/migrations:/sql/migrations
    command:
      [
        "-path",
        "/sql/migrations",
        "-database",
        "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable",
        "up",
      ]

  api:
    build: .
    container_name: api
    hostname: api
    env_file: .env
    depends_on:
      db:
        condition: service_started
      migrate:
        condition: service_started
    ports:
      - 8000:8000

volumes:
  pgdata:
